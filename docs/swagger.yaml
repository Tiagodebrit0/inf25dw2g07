openapi: 3.0.0
info:
  title: API de Livraria
  description: API para gerenciamento de usuários, autores e livros
  version: "1.0.0"

servers:
  - url: http://localhost:3000/api

tags:
  - name: Usuários
    description: Operações relacionadas a usuários
  - name: Autores
    description: Operações relacionadas a autores
  - name: Livros
    description: Operações relacionadas a livros

paths:
  /users:
    get:
      tags: [Usuários]
      summary: Lista todos os usuários
      responses:
        "200":
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags: [Usuários]
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        "201":
          description: Usuário criado com sucesso

  /users/{id}:
    get:
      tags: [Usuários]
      summary: Busca um usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Usuário não encontrado
    put:
      tags: [Usuários]
      summary: Atualiza um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        "200":
          description: Atualizado com sucesso
    delete:
      tags: [Usuários]
      summary: Remove um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Removido com sucesso

  /autores:
    get:
      tags: [Autores]
      summary: Lista todos os autores
      responses:
        "200":
          description: Lista de autores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Autor'
    post:
      tags: [Autores]
      summary: Cria um novo autor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutorInput'
      responses:
        "201":
          description: Autor criado com sucesso

  /autores/{id}:
    get:
      tags: [Autores]
      summary: Busca autor por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Autor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Autor'

  /livros:
    get:
      tags: [Livros]
      summary: Lista todos os livros
      responses:
        "200":
          description: Lista de livros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Livro'
    post:
      tags: [Livros]
      summary: Cria um novo livro
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LivroInput'
      responses:
        "201":
          description: Livro criado com sucesso

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    UserInput:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string
        password:
          type: string

    Autor:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        email:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string

    AutorInput:
      type: object
      properties:
        nome:
          type: string
        email:
          type: string

    Livro:
      type: object
      properties:
        id:
          type: integer
        nome:
          type: string
        autorId:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string

    LivroInput:
      type: object
      properties:
        nome:
          type: string
        autorId:
          type: integer
